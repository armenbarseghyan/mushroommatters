{%- if section.settings.enabled != false -%}
  <div class="announcement-bar" data-announcement-bar>
    <div class="announcement-bar__container">
      <div class="announcement-bar__content">
        {%- if section.blocks.size > 0 -%}
          <div class="announcement-bar__messages" data-announcement-messages>
            {%- for block in section.blocks -%}
              {%- if block.settings.message != blank -%}
                <div class="announcement-bar__message" 
                     data-announcement-message 
                     {% if forloop.first %}data-active{% endif %}>
                  {{ block.settings.message }}
                </div>
              {%- endif -%}
            {%- endfor -%}
          </div>
        {%- else -%}
          <div class="announcement-bar__message" data-announcement-message data-active>
            {{ section.settings.message }}
          </div>
        {%- endif -%}
      </div>
      
      {%- if section.settings.show_close_button -%}
        <button class="announcement-bar__close" 
                data-announcement-close 
                aria-label="{{ 'sections.announcement.close' | t }}">
          <svg width="16" height="16" viewBox="0 0 16 16">
            <path d="M12 4L4 12M4 4l8 8" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
        </button>
      {%- endif -%}
    </div>
  </div>
{%- endif -%}

{% stylesheet %}
  .announcement-bar {
    background-color: rgb(var(--color-base-accent-1));
    color: rgb(var(--color-base-solid-button-labels));
    padding: 1.2rem 0;
    position: relative;
    z-index: 10;
  }
  
  .announcement-bar__container {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }
  
  .announcement-bar__content {
    flex: 1;
    text-align: center;
  }
  
  .announcement-bar__messages {
    position: relative;
    overflow: hidden;
    height: 2.4rem;
  }
  
  .announcement-bar__message {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    opacity: 0;
    transform: translateY(100%);
    transition: all 0.3s ease;
    font-size: 1.4rem;
    font-weight: 500;
    line-height: 2.4rem;
  }
  
  .announcement-bar__message[data-active] {
    opacity: 1;
    transform: translateY(0);
  }
  
  .announcement-bar__close {
    position: absolute;
    right: 2rem;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: rgb(var(--color-base-solid-button-labels));
    cursor: pointer;
    padding: 0.4rem;
    border-radius: 0.4rem;
    transition: background-color 0.2s ease;
  }
  
  .announcement-bar__close:hover {
    background-color: rgba(255, 255, 255, 0.1);
  }
  
  @media (max-width: 749px) {
    .announcement-bar__close {
      right: 1.6rem;
    }
  }
{% endstylesheet %}

{% javascript %}
  class AnnouncementBar {
    constructor() {
      this.bar = document.querySelector('[data-announcement-bar]');
      this.messages = document.querySelectorAll('[data-announcement-message]');
      this.closeButton = document.querySelector('[data-announcement-close]');
      this.rotationSpeed = {{ section.settings.rotation_speed | default: 5 }} * 1000;
      this.currentIndex = 0;
      this.interval = null;
      
      if (!this.bar || this.messages.length <= 1) return;
      
      this.init();
    }
    
    init() {
      this.startRotation();
      this.bindEvents();
    }
    
    startRotation() {
      this.interval = setInterval(() => {
        this.nextMessage();
      }, this.rotationSpeed);
    }
    
    nextMessage() {
      const currentMessage = this.messages[this.currentIndex];
      const nextIndex = (this.currentIndex + 1) % this.messages.length;
      const nextMessage = this.messages[nextIndex];
      
      // Hide current message
      currentMessage.removeAttribute('data-active');
      currentMessage.style.transform = 'translateY(-100%)';
      
      // Show next message
      setTimeout(() => {
        nextMessage.setAttribute('data-active', '');
        nextMessage.style.transform = 'translateY(0)';
        this.currentIndex = nextIndex;
      }, 300);
    }
    
    bindEvents() {
      this.closeButton?.addEventListener('click', () => {
        this.close();
      });
      
      // Pause rotation on hover
      this.bar.addEventListener('mouseenter', () => {
        this.pauseRotation();
      });
      
      this.bar.addEventListener('mouseleave', () => {
        this.resumeRotation();
      });
    }
    
    pauseRotation() {
      if (this.interval) {
        clearInterval(this.interval);
      }
    }
    
    resumeRotation() {
      this.startRotation();
    }
    
    close() {
      this.bar.style.transform = 'translateY(-100%)';
      this.bar.style.transition = 'transform 0.3s ease';
      
      setTimeout(() => {
        this.bar.remove();
      }, 300);
    }
  }
  
  document.addEventListener('DOMContentLoaded', () => {
    new AnnouncementBar();
  });
{% endjavascript %}

{% schema %}
{
  "name": "Announcement bar",
  "settings": [
    {
      "type": "checkbox",
      "id": "enabled",
      "label": "Enable announcement bar",
      "default": true
    },
    {
      "type": "text",
      "id": "message",
      "label": "Message",
      "default": "Free shipping on orders over £50"
    },
    {
      "type": "range",
      "id": "rotation_speed",
      "label": "Message rotation speed (seconds)",
      "min": 3,
      "max": 10,
      "step": 1,
      "default": 5
    },
    {
      "type": "checkbox",
      "id": "show_close_button",
      "label": "Show close button",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "message",
      "name": "Message",
      "settings": [
        {
          "type": "text",
          "id": "message",
          "label": "Message",
          "default": "Free shipping on orders over £50"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Announcement bar",
      "blocks": [
        {
          "type": "message",
          "settings": {
            "message": "Free shipping on orders over £50"
          }
        },
        {
          "type": "message",
          "settings": {
            "message": "New collection available now"
          }
        },
        {
          "type": "message",
          "settings": {
            "message": "Up to 20% off selected items"
          }
        }
      ]
    }
  ]
}
{% endschema %}
